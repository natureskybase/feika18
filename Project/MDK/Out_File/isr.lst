C251 COMPILER V5.60.0,  isr                                                                06/05/23  18:04:24  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE isr
OBJECT MODULE PLACED IN .\Out_File\isr.obj
COMPILER INVOKED BY: D:\Keil_v5\C251\BIN\C251.EXE ..\USER\src\isr.c XSMALL INTR2 WARNINGLEVEL(3) BROWSE INCDIR(..\..\Lib
                    -raries\libraries;..\..\Libraries\seekfree_libraries;..\..\Libraries\seekfree_peripheral;..\CODE;..\USER\inc;..\USER\src)
                    - DEBUG PRINT(.\Out_File\isr.lst) TABS(2) OBJECT(.\Out_File\isr.obj) 

stmt  level    source

    1          ///******************************************************************************************************
             -***************
    2          // * COPYRIGHT NOTICE
    3          // * Copyright (c) 2020,逐飞科技
    4          // * All rights reserved.
    5          // * 技术讨论QQ群：一群：179029047(已满)  二群：244861897(已满)  三群：824575535
    6          // *
    7          // * 以下所有内容版权均属逐飞科技所有，未经允许不得用于商业用途，
    8          // * 欢迎各位使用并传播本程序，修改内容时必须保留逐飞科技的版权声明。
    9          // *
   10          // * @file          isr
   11          // * @company       成都逐飞科技有限公司
   12          // * @author        逐飞科技(QQ790875685)
   13          // * @version       查看doc内version文件 版本说明
   14          // * @Software      MDK FOR C251 V5.60
   15          // * @Target core   STC32G12K128
   16          // * @Taobao        https://seekfree.taobao.com/
   17          // * @date          2020-4-14
   18          // ******************************************************************************************************
             -**************/
   19          #include "headfile.h"
   20          
   21          //UART1中断
   22          void UART1_Isr() interrupt 4
   23          {
   24   1          uint8 res;
   25   1        static uint8 dwon_count;
   26   1          if(UART1_GET_TX_FLAG)
   27   1          {
   28   2              UART1_CLEAR_TX_FLAG;
   29   2              busy[1] = 0;
   30   2          }
   31   1          if(UART1_GET_RX_FLAG)
   32   1          {
   33   2              UART1_CLEAR_RX_FLAG;
   34   2              res = SBUF;
   35   2              //程序自动下载
   36   2              if(res == 0x7F)
   37   2              {
   38   3                  if(dwon_count++ > 20)
   39   3                      IAP_CONTR = 0x60;
   40   3              }
   41   2              else
   42   2              {
   43   3                  dwon_count = 0;
   44   3              }
   45   2          }
   46   1      }
   47          
   48          //UART2中断
   49          void UART2_Isr() interrupt 8
   50          {
   51   1          if(UART2_GET_TX_FLAG)
   52   1        {
   53   2              UART2_CLEAR_TX_FLAG;
   54   2          busy[2] = 0;
   55   2        }
C251 COMPILER V5.60.0,  isr                                                                06/05/23  18:04:24  PAGE 2   

   56   1          if(UART2_GET_RX_FLAG)
   57   1        {
   58   2              UART2_CLEAR_RX_FLAG;
   59   2          //接收数据寄存器为：S2BUF
   60   2      
   61   2        }
   62   1      }
   63          
   64          
   65          //UART3中断
   66          void UART3_Isr() interrupt 17
   67          {
   68   1          if(UART3_GET_TX_FLAG)
   69   1        {
   70   2              UART3_CLEAR_TX_FLAG;
   71   2          busy[3] = 0;
   72   2        }
   73   1          if(UART3_GET_RX_FLAG)
   74   1        {
   75   2              UART3_CLEAR_RX_FLAG;
   76   2          //接收数据寄存器为：S3BUF
   77   2      
   78   2        }
   79   1      }
   80          
   81          
   82          //UART4中断
   83          void UART4_Isr() interrupt 18
   84          {
   85   1          if(UART4_GET_TX_FLAG)
   86   1        {
   87   2              UART4_CLEAR_TX_FLAG;
   88   2          busy[4] = 0;
   89   2        }
   90   1          if(UART4_GET_RX_FLAG)
   91   1        {
   92   2              UART4_CLEAR_RX_FLAG;
   93   2      
   94   2          //接收数据寄存器为：S4BUF;
   95   2          if(wireless_type == WIRELESS_SI24R1)
   96   2              {
   97   3                  wireless_uart_callback();           //无线转串口回调函数
   98   3              }
   99   2              else if(wireless_type == WIRELESS_CH9141)
  100   2              {
  101   3                  bluetooth_ch9141_uart_callback();   //蓝牙转串口回调函数
  102   3              }
  103   2              else if(wireless_type == WIRELESS_CH573)
  104   2              {
  105   3                  wireless_ch573_callback();          //CH573无线模块回调函数
  106   3              }
  107   2        }
  108   1      }
  109          
  110          #define LED P52
*** WARNING C317 IN LINE 110 OF ..\USER\src\isr.c: attempt to redefine macro 'LED'
  111          void INT0_Isr() interrupt 0
  112          {
  113   1        LED = 0;  //点亮LED
  114   1      }
  115          void INT1_Isr() interrupt 2
  116          {
  117   1      
  118   1      }
  119          void INT2_Isr() interrupt 10
  120          {
C251 COMPILER V5.60.0,  isr                                                                06/05/23  18:04:24  PAGE 3   

  121   1        INT2_CLEAR_FLAG;  //清除中断标志
  122   1      }
  123          void INT3_Isr() interrupt 11
  124          {
  125   1        INT3_CLEAR_FLAG;  //清除中断标志
  126   1      }
  127          
  128          void INT4_Isr() interrupt 16
  129          {
  130   1        INT4_CLEAR_FLAG;  //清除中断标志
  131   1      }
  132          
  133          void TM0_Isr() interrupt 1
  134          {
  135   1      
  136   1      }
  137          void TM1_Isr() interrupt 3
  138          {
  139   1      
  140   1      }
  141          void TM2_Isr() interrupt 12
  142          {
  143   1        TIM2_CLEAR_FLAG;  //清除中断标志
  144   1        
  145   1      }
  146          void TM3_Isr() interrupt 19
  147          {
  148   1        TIM3_CLEAR_FLAG; //清除中断标志
  149   1      ///*****************************************/ 
  150   1        if(Roundabout_flag_L == 1)
  151   1        {
  152   2          order_angle = 100;
  153   2          order_speed = 2500;
  154   2          angle_limit = 100;
  155   2        }
  156   1        
  157   1        if(Roundabout_flag_R == 1)
  158   1        {
  159   2          order_angle = -100;
  160   2          order_speed = 2500;
  161   2          angle_limit = 100;
  162   2        }
  163   1        Steer_Spin_limit(order_angle,angle_limit);
  164   1        Motor_Control(order_speed,order_speed);
  165   1        Roundabout_count--;
  166   1        
  167   1        if(Roundabout_count == 0)
  168   1        IE2 |= 0x40;           // 使能定时器4中断
  169   1      
  170   1        
  171   1      }
  172          
  173          void TM4_Isr() interrupt 20    //函数
  174          {
  175   1        TIM4_CLEAR_FLAG; //清除中断标志
  176   1      ///*****************************************/ 
  177   1        if(adc1 <1000 && adc2 <1000 && adc3 <1000 && adc4 <1000)
  178   1          order_speed = 0;
  179   1      
  180   1        Motor_Control(order_speed,order_speed);
  181   1        
  182   1        Read_Adc_Value();
  183   1        ADC_error_processing(1,0,0);
  184   1        ADC_error_window_filtering();
  185   1        ADC_error_weight_filtering();
  186   1        
C251 COMPILER V5.60.0,  isr                                                                06/05/23  18:04:24  PAGE 4   

  187   1        Dir_judge_flag = Direct_judge();
  188   1        
  189   1        switch (Dir_judge_flag)
  190   1        {
  191   2          case(0)://直道
  192   2            order_angle = Correct_Angle(80,10,0);
  193   2            order_speed = 2500;
  194   2            angle_limit = 100;
  195   2          break;
  196   2          
  197   2          case(1)://左弯道
  198   2            order_angle = Correct_Angle(120,0,0);
  199   2            order_speed = 2450;
  200   2            angle_limit = 100;
  201   2          break;
  202   2          
  203   2          case(2)://右弯道
  204   2            order_angle = Correct_Angle(120,0,0);
  205   2            order_speed = 2450;
  206   2            angle_limit = 100;
  207   2          break;
  208   2          
  209   2          case(3)://左环岛
  210   2            IE2 |= 0x00;           // 失能定时器4中断
  211   2            delay_ms(900);         //延时多久进入环岛
  212   2            delay_ms(400);
  213   2            Roundabout_count = 200; //中断时间1s
  214   2            pit_timer_ms(TIM_3,5); //开启定时器3中断
  215   2          break;
  216   2          
  217   2          case(4)://右环岛
  218   2            IE2 |= 0x00;           // 失能定时器4中断
  219   2            delay_ms(900);         //延时多久进入环岛
  220   2            delay_ms(400);
  221   2            Roundabout_count = 200;
  222   2            pit_timer_ms(TIM_3,5); //开启定时器3中断
  223   2          break;
  224   2            
  225   2          case(8)://左转弯过渡
  226   2            order_angle = Correct_Angle(160,0,0);
  227   2            order_speed = 2550;
  228   2            angle_limit = 100;
  229   2          break;
  230   2          
  231   2          case(9)://右转弯过渡
  232   2            order_angle = Correct_Angle(160,0,0);
  233   2            order_speed = 2550;
  234   2            angle_limit = 100;
  235   2          break;
  236   2        }
  237   1        
  238   1        lost_line_judge();//丢线检测
  239   1        lostline_deal();  //丢线处理
  240   1        
  241   1        Steer_Spin_limit(order_angle,angle_limit);
  242   1        
  243   1        
  244   1        
  245   1      }
  246          
  247          //void  INT0_Isr()  interrupt 0;
  248          //void  TM0_Isr()   interrupt 1;
  249          //void  INT1_Isr()  interrupt 2;
  250          //void  TM1_Isr()   interrupt 3;
  251          //void  UART1_Isr() interrupt 4;
  252          //void  ADC_Isr()   interrupt 5;
C251 COMPILER V5.60.0,  isr                                                                06/05/23  18:04:24  PAGE 5   

  253          //void  LVD_Isr()   interrupt 6;
  254          //void  PCA_Isr()   interrupt 7;
  255          //void  UART2_Isr() interrupt 8;
  256          //void  SPI_Isr()   interrupt 9;
  257          //void  INT2_Isr()  interrupt 10;
  258          //void  INT3_Isr()  interrupt 11;
  259          //void  TM2_Isr()   interrupt 12;
  260          //void  INT4_Isr()  interrupt 16;
  261          //void  UART3_Isr() interrupt 17;
  262          //void  UART4_Isr() interrupt 18;
  263          //void  TM3_Isr()   interrupt 19;
  264          //void  TM4_Isr()   interrupt 20;
  265          //void  CMP_Isr()   interrupt 21;
  266          //void  I2C_Isr()   interrupt 24;
  267          //void  USB_Isr()   interrupt 25;
  268          //void  PWM1_Isr()  interrupt 26;
  269          //void  PWM2_Isr()  interrupt 27;


Module Information          Static   Overlayable
------------------------------------------------
  code size            =       872     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =    ------     ------
  xdata-const size     =    ------     ------
  edata size           =         1     ------
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =    ------     ------
End of Module Information.


C251 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
